{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\blogging-platform\\\\blogging\\\\frontend\\\\src\\\\components\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Post from './Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true); // Loading state\n  const [error, setError] = useState(null); // Error state\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await fetch('/posts'); // Update this URL if necessary\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPosts(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPosts();\n  }, []);\n  const handleEdit = id => {\n    // Here, you might want to navigate to the edit page\n    console.log(`Edit post with ID: ${id}`);\n    // Example: navigate(`/edit/${id}`);\n  };\n  const handleDelete = async id => {\n    try {\n      await fetch(`/posts/${id}`, {\n        method: 'DELETE'\n      });\n      // Update state to remove the deleted post\n      setPosts(posts.filter(post => post.id !== id));\n    } catch (error) {\n      console.error('Error deleting post:', error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading posts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this); // Loading message\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this); // Error message\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post,\n      onEdit: handleEdit,\n      onDelete: handleDelete\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(PostList, \"FFSFm1bVdM1s2gLh8ffGbsIvlRY=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","Post","jsxDEV","_jsxDEV","PostList","_s","posts","setPosts","loading","setLoading","error","setError","fetchPosts","response","fetch","ok","Error","data","json","message","handleEdit","id","console","log","handleDelete","method","filter","post","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onEdit","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/blogging-platform/blogging/frontend/src/components/PostList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Post from './Post';\r\n\r\nconst PostList = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true); // Loading state\r\n    const [error, setError] = useState(null); // Error state\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            try {\r\n                const response = await fetch('/posts'); // Update this URL if necessary\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                const data = await response.json();\r\n                setPosts(data);\r\n            } catch (error) {\r\n                setError(error.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchPosts();\r\n    }, []);\r\n\r\n    const handleEdit = (id) => {\r\n        // Here, you might want to navigate to the edit page\r\n        console.log(`Edit post with ID: ${id}`);\r\n        // Example: navigate(`/edit/${id}`);\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            await fetch(`/posts/${id}`, {\r\n                method: 'DELETE',\r\n            });\r\n            // Update state to remove the deleted post\r\n            setPosts(posts.filter(post => post.id !== id));\r\n        } catch (error) {\r\n            console.error('Error deleting post:', error);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <p>Loading posts...</p>; // Loading message\r\n    }\r\n\r\n    if (error) {\r\n        return <p>Error: {error}</p>; // Error message\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Posts</h2>\r\n            {posts.length === 0 ? (\r\n                <p>No posts available</p>\r\n            ) : (\r\n                posts.map(post => (\r\n                    <Post key={post.id} post={post} onEdit={handleEdit} onDelete={handleDelete} />\r\n                ))\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}