{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\blogging-platform\\\\blogging\\\\frontend\\\\src\\\\components\\\\PostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createPost } from '../api/postApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostForm = ({\n  fetchPosts\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [confirmationMessage, setConfirmationMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newPost = {\n      title,\n      content\n    };\n    try {\n      await createPost(newPost);\n      setConfirmationMessage('Post submitted successfully!');\n      await fetchPosts(); // Assuming fetchPosts fetches and updates the post list\n    } catch (error) {\n      setConfirmationMessage('Error submitting post. Please try again.');\n    }\n    setTitle('');\n    setContent('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Content\",\n        value: content,\n        onChange: e => setContent(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), confirmationMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: confirmationMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 37\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(PostForm, \"SXOk6oSBXkvnQ79eSw0cx7ZC3As=\");\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","createPost","jsxDEV","_jsxDEV","PostForm","fetchPosts","_s","title","setTitle","content","setContent","confirmationMessage","setConfirmationMessage","handleSubmit","e","preventDefault","newPost","error","children","onSubmit","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/blogging-platform/blogging/frontend/src/components/PostForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { createPost } from '../api/postApi';\r\n\r\nconst PostForm = ({ fetchPosts }) => {\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [confirmationMessage, setConfirmationMessage] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        const newPost = { title, content };\r\n\r\n        try {\r\n            await createPost(newPost);\r\n            setConfirmationMessage('Post submitted successfully!');\r\n            await fetchPosts(); // Assuming fetchPosts fetches and updates the post list\r\n        } catch (error) {\r\n            setConfirmationMessage('Error submitting post. Please try again.');\r\n        }\r\n\r\n        setTitle('');\r\n        setContent('');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Title\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    required\r\n                />\r\n                <textarea\r\n                    placeholder=\"Content\"\r\n                    value={content}\r\n                    onChange={(e) => setContent(e.target.value)}\r\n                    required\r\n                />\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n            {confirmationMessage && <p>{confirmationMessage}</p>} {/* Display confirmation message */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAElE,MAAMa,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,OAAO,GAAG;MAAET,KAAK;MAAEE;IAAQ,CAAC;IAElC,IAAI;MACA,MAAMR,UAAU,CAACe,OAAO,CAAC;MACzBJ,sBAAsB,CAAC,8BAA8B,CAAC;MACtD,MAAMP,UAAU,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOY,KAAK,EAAE;MACZL,sBAAsB,CAAC,0CAA0C,CAAC;IACtE;IAEAJ,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;EAClB,CAAC;EAED,oBACIP,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAMgB,QAAQ,EAAEN,YAAa;MAAAK,QAAA,gBACzBf,OAAA;QACIiB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,OAAO;QACnBC,KAAK,EAAEf,KAAM;QACbgB,QAAQ,EAAGT,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACU,MAAM,CAACF,KAAK,CAAE;QAC1CG,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACF1B,OAAA;QACIkB,WAAW,EAAC,SAAS;QACrBC,KAAK,EAAEb,OAAQ;QACfc,QAAQ,EAAGT,CAAC,IAAKJ,UAAU,CAACI,CAAC,CAACU,MAAM,CAACF,KAAK,CAAE;QAC5CG,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACF1B,OAAA;QAAQiB,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,EACNlB,mBAAmB,iBAAIR,OAAA;MAAAe,QAAA,EAAIP;IAAmB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAAC,GAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEd,CAAC;AAACvB,EAAA,CA3CIF,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AA6Cd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}