{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\blogging-platform\\\\blogging\\\\frontend\\\\src\\\\components\\\\PostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostForm = ({\n  fetchPosts,\n  editingPost,\n  setEditingPost\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  useEffect(() => {\n    if (editingPost) {\n      setTitle(editingPost.title);\n      setContent(editingPost.content);\n    }\n  }, [editingPost]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const postData = {\n      title,\n      content\n    };\n    if (editingPost) {\n      // Update the post\n      await fetch(`http://localhost:5000/api/posts/${editingPost.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(postData)\n      });\n      setEditingPost(null); // Reset editing state\n    } else {\n      // Create a new post\n      await fetch('http://localhost:5000/api/posts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(postData)\n      });\n    }\n    setTitle('');\n    setContent('');\n    fetchPosts(); // Refresh the posts list\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Post Title\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: content,\n      onChange: e => setContent(e.target.value),\n      placeholder: \"Post Content\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: editingPost ? 'Update Post' : 'Create Post'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), editingPost && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setEditingPost(null),\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(PostForm, \"s6xv9+LkBWArnjy8QFttJ7dFVj4=\");\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","PostForm","fetchPosts","editingPost","setEditingPost","_s","title","setTitle","content","setContent","handleSubmit","e","preventDefault","postData","fetch","id","method","headers","body","JSON","stringify","onSubmit","children","type","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/blogging-platform/blogging/frontend/src/components/PostForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst PostForm = ({ fetchPosts, editingPost, setEditingPost }) => {\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (editingPost) {\r\n            setTitle(editingPost.title);\r\n            setContent(editingPost.content);\r\n        }\r\n    }, [editingPost]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const postData = { title, content };\r\n\r\n        if (editingPost) {\r\n            // Update the post\r\n            await fetch(`http://localhost:5000/api/posts/${editingPost.id}`, {\r\n                method: 'PUT',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(postData),\r\n            });\r\n            setEditingPost(null); // Reset editing state\r\n        } else {\r\n            // Create a new post\r\n            await fetch('http://localhost:5000/api/posts', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(postData),\r\n            });\r\n        }\r\n\r\n        setTitle('');\r\n        setContent('');\r\n        fetchPosts(); // Refresh the posts list\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\" \r\n                value={title} \r\n                onChange={(e) => setTitle(e.target.value)} \r\n                placeholder=\"Post Title\" \r\n                required \r\n            />\r\n            <textarea \r\n                value={content} \r\n                onChange={(e) => setContent(e.target.value)} \r\n                placeholder=\"Post Content\" \r\n                required \r\n            />\r\n            <button type=\"submit\">{editingPost ? 'Update Post' : 'Create Post'}</button>\r\n            {editingPost && <button onClick={() => setEditingPost(null)}>Cancel</button>}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default PostForm;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}