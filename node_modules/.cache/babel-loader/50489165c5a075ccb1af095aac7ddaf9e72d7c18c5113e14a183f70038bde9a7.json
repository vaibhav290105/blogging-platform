{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\blogging-platform\\\\blogging\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/*import React, { useEffect, useState } from 'react';\r\nimport { fetchPosts } from './api/postApi'; // Adjust the import path as needed\r\nimport PostForm from './components/PostForm'; // Adjust the import path as needed\r\nimport PostList from './components/PostList'; // Import the PostList component\r\n\r\nconst App = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [editingPost, setEditingPost] = useState(null); // State for editing post\r\n\r\n    const loadPosts = async () => {\r\n        try {\r\n            const fetchedPosts = await fetchPosts();\r\n            setPosts(fetchedPosts);\r\n        } catch (error) {\r\n            console.error('Error loading posts:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadPosts(); // Fetch posts on component mount\r\n    }, []);\r\n\r\n    const handleEdit = (post) => {\r\n        setEditingPost(post); // Set the post to be edited\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            await fetch(`/posts/${id}`, {\r\n                method: 'DELETE',\r\n            });\r\n            // Remove deleted post from state\r\n            setPosts(posts.filter(post => post.id !== id));\r\n        } catch (error) {\r\n            console.error('Error deleting post:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Blog Posts</h1>\r\n            <PostForm \r\n                fetchPosts={loadPosts} \r\n                editingPost={editingPost} \r\n                setEditingPost={setEditingPost} \r\n            />\r\n            <PostList \r\n                posts={posts} \r\n                onEdit={handleEdit} \r\n                onDelete={handleDelete} \r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;*/\nimport React, { useEffect, useState } from 'react';\nimport { fetchPosts } from './api/postApi'; // Adjust the import path as needed\nimport PostForm from './components/PostForm'; // Adjust the import path as needed\nimport PostList from './components/PostList'; // Import the PostList component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [editingPost, setEditingPost] = useState(null); // State for editing post\n\n  const loadPosts = async () => {\n    try {\n      const fetchedPosts = await fetchPosts();\n      setPosts(fetchedPosts);\n    } catch (error) {\n      console.error('Error loading posts:', error);\n    }\n  };\n  useEffect(() => {\n    loadPosts(); // Fetch posts on component mount\n  }, []);\n  const handleEdit = post => {\n    setEditingPost(post); // Set the post to be edited\n  };\n  const handleDelete = async id => {\n    try {\n      await fetch(`http://localhost:5000/api/posts/${id}`, {\n        method: 'DELETE'\n      });\n      // Remove deleted post from state\n      setPosts(posts.filter(post => post.id !== id));\n    } catch (error) {\n      console.error('Error deleting post:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostForm, {\n      fetchPosts: loadPosts,\n      editingPost: editingPost,\n      setEditingPost: setEditingPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      posts: posts,\n      onEdit: handleEdit,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"qp5yy/dLh6ZObOob12Vdsoj+1Q8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","fetchPosts","PostForm","PostList","jsxDEV","_jsxDEV","App","_s","posts","setPosts","editingPost","setEditingPost","loadPosts","fetchedPosts","error","console","handleEdit","post","handleDelete","id","fetch","method","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","onEdit","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/blogging-platform/blogging/frontend/src/App.js"],"sourcesContent":["/*import React, { useEffect, useState } from 'react';\r\nimport { fetchPosts } from './api/postApi'; // Adjust the import path as needed\r\nimport PostForm from './components/PostForm'; // Adjust the import path as needed\r\nimport PostList from './components/PostList'; // Import the PostList component\r\n\r\nconst App = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [editingPost, setEditingPost] = useState(null); // State for editing post\r\n\r\n    const loadPosts = async () => {\r\n        try {\r\n            const fetchedPosts = await fetchPosts();\r\n            setPosts(fetchedPosts);\r\n        } catch (error) {\r\n            console.error('Error loading posts:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadPosts(); // Fetch posts on component mount\r\n    }, []);\r\n\r\n    const handleEdit = (post) => {\r\n        setEditingPost(post); // Set the post to be edited\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            await fetch(`/posts/${id}`, {\r\n                method: 'DELETE',\r\n            });\r\n            // Remove deleted post from state\r\n            setPosts(posts.filter(post => post.id !== id));\r\n        } catch (error) {\r\n            console.error('Error deleting post:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Blog Posts</h1>\r\n            <PostForm \r\n                fetchPosts={loadPosts} \r\n                editingPost={editingPost} \r\n                setEditingPost={setEditingPost} \r\n            />\r\n            <PostList \r\n                posts={posts} \r\n                onEdit={handleEdit} \r\n                onDelete={handleDelete} \r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { fetchPosts } from './api/postApi'; // Adjust the import path as needed\r\nimport PostForm from './components/PostForm'; // Adjust the import path as needed\r\nimport PostList from './components/PostList'; // Import the PostList component\r\n\r\nconst App = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [editingPost, setEditingPost] = useState(null); // State for editing post\r\n\r\n    const loadPosts = async () => {\r\n        try {\r\n            const fetchedPosts = await fetchPosts();\r\n            setPosts(fetchedPosts);\r\n        } catch (error) {\r\n            console.error('Error loading posts:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadPosts(); // Fetch posts on component mount\r\n    }, []);\r\n\r\n    const handleEdit = (post) => {\r\n        setEditingPost(post); // Set the post to be edited\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            await fetch(`http://localhost:5000/api/posts/${id}`, {\r\n                method: 'DELETE',\r\n            });\r\n            // Remove deleted post from state\r\n            setPosts(posts.filter(post => post.id !== id));\r\n        } catch (error) {\r\n            console.error('Error deleting post:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Blog Posts</h1>\r\n            <PostForm fetchPosts={loadPosts} editingPost={editingPost} setEditingPost={setEditingPost} />\r\n            <PostList posts={posts} onEdit={handleEdit} onDelete={handleDelete} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,eAAe,CAAC,CAAC;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB,CAAC,CAAC;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEtD,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA,MAAMC,YAAY,GAAG,MAAMZ,UAAU,CAAC,CAAC;MACvCQ,QAAQ,CAACI,YAAY,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAEDf,SAAS,CAAC,MAAM;IACZa,SAAS,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,UAAU,GAAIC,IAAI,IAAK;IACzBN,cAAc,CAACM,IAAI,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,EAAE,IAAK;IAC/B,IAAI;MACA,MAAMC,KAAK,CAAC,mCAAmCD,EAAE,EAAE,EAAE;QACjDE,MAAM,EAAE;MACZ,CAAC,CAAC;MACF;MACAZ,QAAQ,CAACD,KAAK,CAACc,MAAM,CAACL,IAAI,IAAIA,IAAI,CAACE,EAAE,KAAKA,EAAE,CAAC,CAAC;IAClD,CAAC,CAAC,OAAOL,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,oBACIT,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAAkB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBtB,OAAA,CAACH,QAAQ;MAACD,UAAU,EAAEW,SAAU;MAACF,WAAW,EAAEA,WAAY;MAACC,cAAc,EAAEA;IAAe;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7FtB,OAAA,CAACF,QAAQ;MAACK,KAAK,EAAEA,KAAM;MAACoB,MAAM,EAAEZ,UAAW;MAACa,QAAQ,EAAEX;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEd,CAAC;AAACpB,EAAA,CAxCID,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AA0CT,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}