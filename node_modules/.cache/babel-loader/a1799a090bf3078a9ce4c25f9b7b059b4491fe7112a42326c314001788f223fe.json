{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\blogging-platform\\\\blogging\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchPosts, loginUser } from './api/postApi'; // Adjust the import path as needed\nimport PostForm from './components/PostForm'; // Adjust the import path as needed\nimport Login from './components/Login'; // Adjust the import path as needed\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const loadPosts = async () => {\n    try {\n      const fetchedPosts = await fetchPosts();\n      setPosts(fetchedPosts);\n    } catch (error) {\n      console.error('Error loading posts:', error);\n    }\n  };\n  const handleLogin = async (username, password) => {\n    try {\n      await loginUser(username, password);\n      setIsAuthenticated(true);\n      loadPosts(); // Load posts after successful login\n    } catch (error) {\n      console.error('Login failed:', error);\n    }\n  };\n  useEffect(() => {\n    if (isAuthenticated) {\n      loadPosts(); // Fetch posts only when authenticated\n    }\n  }, [isAuthenticated]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), !isAuthenticated ? /*#__PURE__*/_jsxDEV(Login, {\n      setIsAuthenticated: setIsAuthenticated,\n      handleLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PostForm, {\n        fetchPosts: loadPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"SxEGvzJuF6hZUz2Sm4FR8aDYOIQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","fetchPosts","loginUser","PostForm","Login","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","posts","setPosts","isAuthenticated","setIsAuthenticated","loadPosts","fetchedPosts","error","console","handleLogin","username","password","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","title","content","id","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/blogging-platform/blogging/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchPosts, loginUser } from './api/postApi'; // Adjust the import path as needed\r\nimport PostForm from './components/PostForm'; // Adjust the import path as needed\r\nimport Login from './components/Login'; // Adjust the import path as needed\r\n\r\nconst App = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n    const loadPosts = async () => {\r\n        try {\r\n            const fetchedPosts = await fetchPosts();\r\n            setPosts(fetchedPosts);\r\n        } catch (error) {\r\n            console.error('Error loading posts:', error);\r\n        }\r\n    };\r\n\r\n    const handleLogin = async (username, password) => {\r\n        try {\r\n            await loginUser(username, password);\r\n            setIsAuthenticated(true);\r\n            loadPosts(); // Load posts after successful login\r\n        } catch (error) {\r\n            console.error('Login failed:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            loadPosts(); // Fetch posts only when authenticated\r\n        }\r\n    }, [isAuthenticated]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Blog Posts</h1>\r\n            {!isAuthenticated ? (\r\n                <Login setIsAuthenticated={setIsAuthenticated} handleLogin={handleLogin} />\r\n            ) : (\r\n                <>\r\n                    <PostForm fetchPosts={loadPosts} />\r\n                    <ul>\r\n                        {posts.map((post) => (\r\n                            <li key={post.id}>\r\n                                <h2>{post.title}</h2>\r\n                                <p>{post.content}</p>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}