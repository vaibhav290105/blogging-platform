{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\blogging-platform\\\\blogging\\\\frontend\\\\src\\\\components\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Post from './Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = ({\n  onEdit\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const fetchPosts = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/posts');\n      if (!response.ok) throw new Error('Network response was not ok');\n      const data = await response.json();\n      setPosts(data);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n  useEffect(() => {\n    fetchPosts(); // Fetch posts when component mounts\n  }, []);\n  const handleDelete = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/posts/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) throw new Error('Network response was not ok');\n\n      // Remove deleted post from state\n      setPosts(prevPosts => prevPosts.filter(post => post.id !== id));\n    } catch (error) {\n      console.error('Error deleting post:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post,\n      onEdit: onEdit,\n      onDelete: handleDelete\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(PostList, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","Post","jsxDEV","_jsxDEV","PostList","onEdit","_s","posts","setPosts","fetchPosts","response","fetch","ok","Error","data","json","error","console","handleDelete","id","method","prevPosts","filter","post","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/blogging-platform/blogging/frontend/src/components/PostList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Post from './Post';\r\n\r\nconst PostList = ({ onEdit }) => {\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    const fetchPosts = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/posts');\r\n            if (!response.ok) throw new Error('Network response was not ok');\r\n            const data = await response.json();\r\n            setPosts(data);\r\n        } catch (error) {\r\n            console.error('Error fetching posts:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchPosts(); // Fetch posts when component mounts\r\n    }, []);\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/api/posts/${id}`, {\r\n                method: 'DELETE',\r\n            });\r\n            if (!response.ok) throw new Error('Network response was not ok');\r\n            \r\n            // Remove deleted post from state\r\n            setPosts(prevPosts => prevPosts.filter(post => post.id !== id));\r\n        } catch (error) {\r\n            console.error('Error deleting post:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Posts</h2>\r\n            {posts.map(post => (\r\n                <Post key={post.id} post={post} onEdit={onEdit} onDelete={handleDelete} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;MAC/D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChE,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCP,QAAQ,CAACM,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACZU,UAAU,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,YAAY,GAAG,MAAOC,EAAE,IAAK;IAC/B,IAAI;MACA,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmCQ,EAAE,EAAE,EAAE;QAClEC,MAAM,EAAE;MACZ,CAAC,CAAC;MACF,IAAI,CAACV,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;;MAEhE;MACAL,QAAQ,CAACa,SAAS,IAAIA,SAAS,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACJ,EAAE,KAAKA,EAAE,CAAC,CAAC;IACnE,CAAC,CAAC,OAAOH,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,oBACIb,OAAA;IAAAqB,QAAA,gBACIrB,OAAA;MAAAqB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACbrB,KAAK,CAACsB,GAAG,CAACN,IAAI,iBACXpB,OAAA,CAACF,IAAI;MAAesB,IAAI,EAAEA,IAAK;MAAClB,MAAM,EAAEA,MAAO;MAACyB,QAAQ,EAAEZ;IAAa,GAA5DK,IAAI,CAACJ,EAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAuD,CAC5E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACtB,EAAA,CAxCIF,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}